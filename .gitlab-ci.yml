image: registry.gitlab.com/gitlab-org/terraform-images/releases/terraform:1.1.9

# https://docs.gitlab.com/ee/user/infrastructure/iac/terraform_state.html#configure-the-backend
variables:
  PJ_ROOT: ${CI_PROJECT_DIR}/k8s
  PJ_ROOT_EXTRA: ${CI_PROJECT_DIR}/extra_k8s
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${TF_STATE_NAME}
  AWS_ACCESS_KEY_ID: ${TF_VAR_aws_access_key_id}
  AWS_SECRET_ACCESS_KEY: ${TF_VAR_aws_secret_access_key}
  TF_VAR_cloudflare_api_key: ${TF_VAR_cloudflare_api_key}
  TF_VAR_cloudflare_email: ${TF_VAR_cloudflare_email}
  PHASE: "destroy"
  # TF_VAR_db_instance_class: db.m6g.xlarge # db.t2.micro
  TF_VAR_db_instance_class: db.t2.micro

cache:
  key: ${PJ_ROOT}-cache
  paths:
    - ${PJ_ROOT}/.terraform
  key: ${PJ_ROOT_EXTRA}-cache
  paths:
    - ${PJ_ROOT_EXTRA}/.terraform

stages:
  - init
  - validate
  - build
  - apply
  - extra-init
  - extra-validate
  - extra-build
  - extra-apply
  - extra-destroy
  - destroy

    # Variables for example:
    #
    # TERRAFORM_STATE_TEST           "test"
    # K8S_NAME_TEST                  "test"
    # CNAME_RECORD_TEST              "test.app"
    # DB_NAME_TEST                   "gocovid"
    # DB_USER_TEST                   "testuser"
    # DB_PASS_TEST                   "yourstrongpassword"
    # DB_ENVIRONMENT_TEST            "test"
    # DOMAIN_NAME_TEST               "example.com"
    # AWS_REGION_TEST                "eu-central-1"
    # ENABLE_ECR_BOOL_TEST           "false" or "true"

    # Extra variables for example:
    #
    # TERRAFORM_STATE_TEST_EXTRA     "test-extra"
    # AWS_REGION_TEST_EXTRA          "eu-central-1"
    # K8S_NAME_TEST                  "test"

    # TFLINT CONFIG (file type) for example:
    # TFLINT_CONF: |
    # plugin "aws" {
    #   enabled = true
    #   version = "0.13.2"
    #   source  = "github.com/terraform-linters/tflint-ruleset-aws"
    # }
    
.test-variables: &test-variables
  ENVIRONMENT: test
  TF_STATE_NAME: ${ENVIRONMENT}-state
  TF_VAR_k8s_name: ${K8S_NAME_TEST}
  TF_VAR_cname_record: ${CNAME_RECORD_TEST}
  TF_VAR_db_name: ${DB_NAME_TEST}
  TF_VAR_db_user: ${DB_USER_TEST}
  TF_VAR_db_pass: ${DB_PASS_TEST}
  TF_VAR_environment: ${ENVIRONMENT}
  TF_VAR_domain: ${DOMAIN_NAME_TEST}
  TF_VAR_region: ${AWS_REGION_TEST}
  TF_VAR_enable_ecr: ${ENABLE_ECR_BOOL_TEST}
 
.prod-variables: &prod-variables
  ENVIRONMENT: prod
  TF_STATE_NAME: ${ENVIRONMENT}-state
  TF_VAR_k8s_name: ${K8S_NAME_PROD}
  TF_VAR_cname_record: ${CNAME_RECORD_PROD}
  TF_VAR_db_name: ${DB_NAME_PROD}
  TF_VAR_db_user: ${DB_USER_PROD}
  TF_VAR_db_pass: ${DB_PASS_PROD}
  TF_VAR_environment: ${ENVIRONMENT}
  TF_VAR_domain: ${DOMAIN_NAME_PROD}
  TF_VAR_region: ${AWS_REGION_PROD}
  TF_VAR_enable_ecr: ${ENABLE_ECR_BOOL_PROD}

.test-variables-extra: &test-variables-extra
  ENVIRONMENT: test
  TF_STATE_NAME: ${ENVIRONMENT}-state-extra
  TF_VAR_region: ${AWS_REGION_TEST}
  TF_VAR_k8s_name: ${K8S_NAME_TEST}
 
.prod-variables-extra: &prod-variables-extra
  ENVIRONMENT: prod
  TF_STATE_NAME: ${ENVIRONMENT}-state-extra
  TF_VAR_region: ${AWS_REGION_PROD}
  TF_VAR_k8s_name: ${K8S_NAME_PROD}


.before-k8s: &before-k8s
  - cd ${PJ_ROOT}
  - echo ${TF_ADDRESS}

.before-k8s-extra: &before-k8s-extra
  - cd ${PJ_ROOT_EXTRA}
  - echo ${TF_ADDRESS}

# k8s
terraform init:
  stage: init
  before_script:
    *before-k8s
  script:
    - gitlab-terraform init

terraform validate:
  stage: validate
  before_script:
    *before-k8s
  script:
    - gitlab-terraform init
    - gitlab-terraform validate
  needs:
    - terraform init

tflint:
  stage: validate
  before_script:
    *before-k8s
  image:
    name: ghcr.io/terraform-linters/tflint
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    - cp ${TFLINT_CONF} .tflint.hcl
    - tflint --init
    - tflint -f junit > report.xml || printf ""
    - tflint -f json > report.json || printf ""
    - tflint -f default
  needs:
    - terraform init
  allow_failure: true
  artifacts:
    expire_in: 1 week
    paths:
      - ${PJ_ROOT}/report.json
    # https://docs.gitlab.com/ee/ci/yaml/artifacts_reports.html
    reports:
      junit: ${PJ_ROOT}/report.xml

.base terraform build:
  stage: build
  before_script:
    *before-k8s
  script:
    - gitlab-terraform plan
    - gitlab-terraform plan-json
    - gitlab-terraform plan -out plan.cache
    - gitlab-terraform show -json plan.cache > plan.json
  artifacts:
    name: plan
    paths:
      - ${PJ_ROOT}/plan.cache
      - ${PJ_ROOT}/plan.json
    reports:
      terraform: ${PJ_ROOT}/plan.json
  needs:
    - terraform validate
    - tflint

test terraform build:
  extends: .base terraform build
  variables:
    *test-variables
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_TEST}.${DOMAIN_NAME_TEST}
  # auto_stop_in: 1 week
  # on_stop: test terraform destroy
  only:
    - develop
    - terraform-ci

prod terraform build:
  extends: .base terraform build
  variables:
    *prod-variables
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_PROD}.${DOMAIN_NAME_PROD}
  only:
    - main
  # auto_stop_in: 4 week
  # on_stop: prod terraform destroy


# https://gitlab.com/infracost/infracost-gitlab-ci
# https://www.infracost.io/docs/
infracost:
  stage: build
  image:
    name: infracost/infracost:ci-0.9
    entrypoint: [""]
  before_script:
    *before-k8s
  needs:
    - test terraform build
  dependencies:
    - test terraform build
  script:
    - infracost breakdown --path . --terraform-parse-hcl --format table --show-skipped
  variables:
    *test-variables
  only:
    - develop

.base terraform apply:
  stage: apply
  before_script:
    *before-k8s
  when: manual
  script:
    - gitlab-terraform apply

test terraform apply:
  extends: .base terraform apply
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_TEST}.${DOMAIN_NAME_TEST}
  # auto_stop_in: 1 week
  # on_stop: test terraform destroy
  only:
    - develop
    - terraform-ci
  variables:
    *test-variables
  dependencies:
    - test terraform build
  needs:
    - test terraform build

prod terraform apply:
  extends: .base terraform apply
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_PROD}.${DOMAIN_NAME_PROD}
  # auto_stop_in: 4 week
  # on_stop: prod terraform destroy
  only:
    - main
  variables:
    *prod-variables
  dependencies:
    - prod terraform build
  needs:
    - prod terraform build


# extra_k8s
extra terraform init:
  stage: extra-init
  before_script:
    *before-k8s-extra
  script:
    - gitlab-terraform init

extra terraform validate:
  stage: extra-validate
  before_script:
    *before-k8s-extra
  script:
    - gitlab-terraform validate
  needs:
    - extra terraform init

tflint extra:
  stage: extra-validate
  before_script:
    *before-k8s-extra
  image:
    name: ghcr.io/terraform-linters/tflint
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    - cp ${TFLINT_CONF} .tflint.hcl
    - tflint --init
    - tflint -f junit > report.xml || printf ""
    - tflint -f json > report.json || printf ""
    - tflint -f default
  needs:
    - extra terraform init
  allow_failure: false
  artifacts:
    expire_in: 1 week
    paths:
      - ${PJ_ROOT_EXTRA}/report.json
    # https://docs.gitlab.com/ee/ci/yaml/artifacts_reports.html
    reports:
      junit: ${PJ_ROOT_EXTRA}/report.xml

.extra base terraform build:
  stage: extra-build
  before_script:
    *before-k8s-extra
  script:
    - gitlab-terraform validate
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: extra-plan
    paths:
      - ${PJ_ROOT_EXTRA}/plan.cache
    reports:
      terraform: ${PJ_ROOT_EXTRA}/plan.json

extra test terraform build:
  extends: .extra base terraform build
  variables:
    *test-variables-extra
  environment:
    name: ${ENVIRONMENT}
    url: ${CNAME_RECORD_TEST}.${DOMAIN_NAME_TEST}
  # auto_stop_in: 1 week
  # on_stop: extra test terraform destroy
  only:
    - develop
    - terraform-ci
  needs:
    - test terraform apply
    - extra terraform validate
    - tflint extra

extra prod terraform build:
  extends: .extra base terraform build
  variables:
    *prod-variables-extra
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_PROD}.${DOMAIN_NAME_PROD}
  # auto_stop_in: 4 week
  # on_stop: extra prod terraform destroy
  only:
    - main
  needs:
    - prod terraform apply
    - extra terraform validate
    - tflint extra


.extra base terraform apply:
  stage: extra-apply
  when: manual
  before_script:
    *before-k8s-extra
  script:
    - gitlab-terraform apply

extra test terraform apply:
  extends: .extra base terraform apply
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_TEST}.${DOMAIN_NAME_TEST}
  # auto_stop_in: 1 week
  # on_stop: extra test terraform destroy
  only:
    - develop
    - terraform-ci
  variables:
    *test-variables-extra
  dependencies:
    - extra test terraform build
  needs:
    - extra test terraform build

extra prod terraform apply:
  extends: .extra base terraform apply
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_PROD}.${DOMAIN_NAME_PROD}
  # auto_stop_in: 4 week
  # on_stop: extra prod terraform destroy
  only:
    - main
  variables:
    *prod-variables-extra
  dependencies:
    - extra prod terraform build
  needs:
    - extra prod terraform build

.extra base terraform destroy:
  stage: extra-destroy
  before_script:
    *before-k8s-extra
  when: manual
  script:
    - gitlab-terraform destroy

extra test terraform destroy:
  extends: .extra base terraform destroy
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_TEST}.${DOMAIN_NAME_TEST}
  # action: stop
  variables:
    *test-variables-extra
  rules:
    - if: '$PHASE == "destroy" && ($CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_REF_NAME == "terraform-ci")'
      when: manual
  needs:
    - extra test terraform apply

extra prod terraform destroy:
  extends: .extra base terraform destroy
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_PROD}.${DOMAIN_NAME_PROD}
  # action: stop
  variables:
    *prod-variables-extra
  rules:
    - if: '$PHASE == "destroy" && $CI_COMMIT_REF_NAME == "main"'
      when: manual
  needs:
    - extra prod terraform apply

# k8s
.base terraform destroy:
  stage: destroy
  before_script:
    *before-k8s
  when: manual
  script:
    - gitlab-terraform destroy

test terraform destroy:
  extends: .base terraform destroy
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_TEST}.${DOMAIN_NAME_TEST}
  # action: stop
  variables:
    *test-variables
  rules:
    - if: '$PHASE == "destroy" && ($CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_REF_NAME == "terraform-ci")'
      when: manual
  needs:
    - extra test terraform destroy

prod terraform destroy:
  extends: .base terraform destroy
  environment:
    name: ${ENVIRONMENT}
    url: http://${CNAME_RECORD_PROD}.${DOMAIN_NAME_PROD}
  # action: stop
  variables:
    *prod-variables
  rules:
    - if: '$PHASE == "destroy" && $CI_COMMIT_REF_NAME == "main"'
      when: manual
  needs:
    - extra prod terraform destroy
